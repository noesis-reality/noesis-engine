// automatically generated by the FlatBuffers compiler, do not modify

package harmony.protocol

import com.google.flatbuffers.kotlin.*
import kotlin.jvm.JvmInline
@Suppress("unused")
class PromptRequest : Table() {

    fun init(i: Int, buffer: ReadWriteBuffer) : PromptRequest = reset(i, buffer)

    val systemMessage : String? get() = lookupField(4, null ) { string(it + bufferPos) }
    fun systemMessageAsBuffer() : ReadBuffer = vectorAsBuffer(bb, 4, 1)

    val userMessage : String? get() = lookupField(6, null ) { string(it + bufferPos) }
    fun userMessageAsBuffer() : ReadBuffer = vectorAsBuffer(bb, 6, 1)

    val assistantPrefix : String? get() = lookupField(8, null ) { string(it + bufferPos) }
    fun assistantPrefixAsBuffer() : ReadBuffer = vectorAsBuffer(bb, 8, 1)

    val templateName : String? get() = lookupField(10, null ) { string(it + bufferPos) }
    fun templateNameAsBuffer() : ReadBuffer = vectorAsBuffer(bb, 10, 1)

    val contextLength : UInt get() = lookupField(12, 8192u ) { bb.getUInt(it + bufferPos) }

    val reasoningEnabled : Boolean get() = lookupField(14, false ) { 0.toByte() != bb.get(it + bufferPos) }

    companion object {
        fun validateVersion() = VERSION_2_0_8

        fun asRoot(buffer: ReadWriteBuffer) : PromptRequest = asRoot(buffer, PromptRequest())
        fun asRoot(buffer: ReadWriteBuffer, obj: PromptRequest) : PromptRequest = obj.init(buffer.getInt(buffer.limit) + buffer.limit, buffer)


        fun createPromptRequest(builder: FlatBufferBuilder, systemMessageOffset: Offset<String>, userMessageOffset: Offset<String>, assistantPrefixOffset: Offset<String>, templateNameOffset: Offset<String>, contextLength: UInt, reasoningEnabled: Boolean) : Offset<PromptRequest> {
            builder.startTable(6)
            addContextLength(builder, contextLength)
            addTemplateName(builder, templateNameOffset)
            addAssistantPrefix(builder, assistantPrefixOffset)
            addUserMessage(builder, userMessageOffset)
            addSystemMessage(builder, systemMessageOffset)
            addReasoningEnabled(builder, reasoningEnabled)
            return endPromptRequest(builder)
        }
        fun startPromptRequest(builder: FlatBufferBuilder) = builder.startTable(6)

        fun addSystemMessage(builder: FlatBufferBuilder, systemMessage: Offset<String>) = builder.add(0, systemMessage, 0)

        fun addUserMessage(builder: FlatBufferBuilder, userMessage: Offset<String>) = builder.add(1, userMessage, 0)

        fun addAssistantPrefix(builder: FlatBufferBuilder, assistantPrefix: Offset<String>) = builder.add(2, assistantPrefix, 0)

        fun addTemplateName(builder: FlatBufferBuilder, templateName: Offset<String>) = builder.add(3, templateName, 0)

        fun addContextLength(builder: FlatBufferBuilder, contextLength: UInt) = builder.add(4, contextLength, 8192u)

        fun addReasoningEnabled(builder: FlatBufferBuilder, reasoningEnabled: Boolean) = builder.add(5, reasoningEnabled, false)

        fun endPromptRequest(builder: FlatBufferBuilder) : Offset<PromptRequest> {
            val o: Offset<PromptRequest> = builder.endTable()
            return o
        }
    }
}

typealias PromptRequestOffsetArray = OffsetArray<PromptRequest>

inline fun PromptRequestOffsetArray(size: Int, crossinline call: (Int) -> Offset<PromptRequest>): PromptRequestOffsetArray =
    PromptRequestOffsetArray(IntArray(size) { call(it).value })
